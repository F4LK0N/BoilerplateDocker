#!/bin/bash
set -e

echo "### CONTAINER SETUP ###";



mysql_config()
{
    mysqld --validate-config;
}

mysql_initialize()
{
    if [[ -d "/data/sql/storage/mysql" ]]; then
		
        echo "Table exists";
        return;

    fi
    
    echo "Create table";
    mysqld --initialize --user=mysql

}

mysql_core_databases()
{
    core_database_exists=0;
    if [ -d "/data/sql/storage/mysql" ]; then
		core_database_exists=1;
	else

        echo "SQL - CORE INIT";
        mysql_core_init

        echo "SQL - TEMP SERVER [START]";
        mysql_temp_server_start
        
        echo "SQL - TIMEZONE";

        
        echo "SQL - ROOT USER";


        echo "SQL - APP DATABASES";
        
        
        echo "SQL - APP USER";


        echo "SQL - TEMP SERVER [STOP]";
        mysql_temp_server_stop

    fi
}

mysql_core_init()
{
    mysqld --initialize-insecure --default-time-zone=SYSTEM
}

mysql_temp_server_start()
{
    mysqld --daemonize --skip-networking --default-time-zone=SYSTEM --socket="/run/mysqld/mysqld.sock"
}

mysql_timezone()
{
    mysql> SELECT @@global.time_zone;
    echo 0;
    mysql> SET GLOBAL time_zone = '-03:00';
    echo 1;
    mysql> SELECT @@global.time_zone;
    echo 2;
}

mysql_temp_server_stop()
{
    mysqladmin shutdown -uroot --socket="/run/mysqld/mysqld.sock";
}



#mysql_get_config() {
#    # Fetch value from server config
#    # We use mysqld --verbose --help instead of my_print_defaults because the
#    # latter only show values present in config files, and not server defaults
#	local conf="$1"; shift
#	"$@" "${_verboseHelpArgs[@]}" 2>/dev/null \
#		| awk -v conf="$conf" '$1 == conf && /^[^ \t]/ { sub(/^[^ \t]+[ \t]+/, ""); print; exit }'
#	# match "datadir      /some/path with/spaces in/it here" but not "--xyz=abc\n     datadir (xyz)"
#    mysqld --verbose --help | grep dir;
#    echo '';
#    echo '';
#    echo '';
#    echo '';
#}





if [[ -f "${OS_DATA}/container/setup-done" ]]; then

    echo "[OK]";

else
    
    echo "FILESYSTEM - CLEAR";
    rm -rf ${OS_DATA}/container;
    
    
    echo "FILESYSTEM - CREATE";
    # Container
    mkdir -p --mode=777 ${ROOT_DATA};
    mkdir -p --mode=777 ${ROOT_LOGS};
    # OS
    mkdir -p --mode=777 ${OS_DATA};
    mkdir -p --mode=777 ${OS_DATA}/container;
    mkdir -p --mode=777 ${OS_LOGS};
    # SQL
    mkdir -p --mode=750 ${SQL_DATA};
    mkdir -p --mode=750 ${SQL_DATA}/storage;
    mkdir -p --mode=750 ${SQL_LOGS};
    mkdir -p --mode=750 ${SQL_LOGS}/tmp;



    echo "FILESYSTEM - PERMISSIONS";
    # Container
    chmod 777 ${ROOT_DATA};
    chmod 777 ${ROOT_LOGS};
    # OS
    chmod 777 ${OS_DATA};
    chmod 777 ${OS_DATA}/container;
    chmod 777 ${OS_LOGS};
    # SQL
    chmod 750 ${SQL_DATA};
    chmod 750 ${SQL_DATA}/storage;
    chmod 750 ${SQL_LOGS};
    chmod 750 ${SQL_LOGS}/tmp;
    chmod 664 /etc/mysql/my.cnf;
    chmod 664 /etc/mysql/conf.d/mysql.cnf;
    
    chown mysql:mysql ${SQL_DATA};
    chown mysql:mysql ${SQL_DATA}/storage;
    chown mysql:mysql ${SQL_LOGS};
    chown mysql:mysql ${SQL_LOGS}/tmp;



    echo "SQL - CONFIG";
    mysqld --validate-config --user=mysql

    echo "SQL - INITIALIZE";
    #mysql_initialize
    
    
    #mysql_core_databases


    #touch "${OS_DATA}/container/setup-done"
    #chmod 777 "${OS_DATA}/container/setup-done"
    echo "[DONE]"

fi
