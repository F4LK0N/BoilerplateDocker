//### KEYBINDINGS ###
//
// Regex - Highlight Exclusion Rules:
//  ^.*\{\n.*\n.*"-.*\n(.*"when.*\n)?.*\},?\n
//
[
  //##########################################################################
  //### APPLICATION ###
  //##########################################################################
  //OPEN WINDOW
  {
    "key": "ctrl+n",
    "command": "workbench.action.newWindow"
  },
  //OPEN FOLDER
  {
    "key": "ctrl+o",
    "command": "workbench.action.files.openFolder"
  },
  //UNDO
  {
    "key": "ctrl+z",
    "command": "undo"
  },
  //REDO
  {
    "key": "ctrl+y",
    "command": "redo"
  },
  //SETTINGS
  {
    "key": "ctrl+shift+f1",
    "command": "workbench.action.openSettings"
  },
  //KEYBINDINGS
  {
    "key": "ctrl+shift+alt+f1",
    "command": "workbench.action.openGlobalKeybindings"
  },
  //##########################################################################
  //### VIEWS (CTRL+ALT+NUMPAD) ###
  //##########################################################################
  //### EDITOR (8,5) ###
  //FOCUS
  {
    "key": "ctrl+alt+numpad5",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  //MAXIMIZE
  {
    "key": "ctrl+alt+numpad8",
    "command": "workbench.action.maximizeEditor"
  },
  //### SIDEBAR (7,4) ###
  //EXPLORER
  {
    "key": "ctrl+alt+numpad4",
    "command": "workbench.explorer.fileView.focus",
    "when": "!filesExplorerFocus"
  },
  //SOURCE CONTROL
  {
    "key": "ctrl+alt+numpad7",
    "command": "workbench.scm.focus",
    "when": "workbench.scm.active && focusedView != 'workbench.scm'"
  },
  //### AUXILIARY (9,6) ###
  //TIMELINE
  {
    "key": "ctrl+alt+numpad9",
    "command": "timeline.focus"
  },
  //OUTLINE
  {
    "key": "ctrl+alt+numpad6",
    "command": "outline.focus"
  },
  //DATABASE
  {
    "key": "ctrl+alt+numpad3",
    "command": "github.cweijan.mysql.focus"
  },
  //### PANEL (0,1,2) ###
  //TERMINAL
  {
    "key": "ctrl+alt+numpad0",
    "command": "terminal.focus"
  },
  //PROBLEMS
  {
    "key": "ctrl+alt+numpad1",
    "command": "workbench.panel.markers.view.focus"
  },
  //OUTPUT
  {
    "key": "ctrl+alt+numpad2",
    "command": "workbench.panel.output.focus"
  },
  //### OTHERS ('/','*') ###
  //ACTIVITY
  {
    "key": "ctrl+alt+numpad_divide",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  //STATUS
  {
    "key": "ctrl+alt+numpad_multiply",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  //### HIDE ###
  //SIDEBAR
  {
    "key": "escape",
    //"command": "workbench.action.closeSidebar",
    "command": "workbench.explorer.fileView.focus",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+alt+numpad4",
    "command": "workbench.action.closeSidebar",
    "when": "sideBarFocus && filesExplorerFocus"
  },
  {
    "key": "ctrl+alt+numpad7",
    //"command": "workbench.action.closeSidebar",
    "command": "workbench.explorer.fileView.focus",
    "when": "sideBarFocus && focusedView == 'workbench.scm'"
  },
  //AUXILIARY
  {
    "key": "escape",
    "command": "workbench.action.closeAuxiliaryBar",
    "when": "auxiliaryBarFocus"
  },
  {
    "key": "ctrl+alt+numpad9",
    "command": "workbench.action.closeAuxiliaryBar",
    "when": "auxiliaryBarFocus"
  },
  {
    "key": "ctrl+alt+numpad6",
    "command": "workbench.action.closeAuxiliaryBar",
    "when": "auxiliaryBarFocus"
  },
  {
    "key": "ctrl+alt+numpad3",
    "command": "workbench.action.closeAuxiliaryBar",
    "when": "auxiliaryBarFocus"
  },
  //PANEL
  {
    "key": "shift+escape",
    "command": "workbench.action.closePanel",
    "when": "panelFocus"
  },
  //##########################################################################
  //### EDITOR - TABS ###
  //##########################################################################
  //CLOSE
  {
    "key": "ctrl+w",
    "command": "workbench.action.closeActiveEditor",
    "when": "editorFocus"
  },
  //CLOSE ALL
  {
    "key": "ctrl+alt+w",
    "command": "workbench.action.closeEditorsInGroup",
    "when": "editorFocus"
  },
  //REOPEN
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.reopenClosedEditor"
  },
  //##########################################################################
  //### EDITOR - TABS AND GROUPS ###
  //##########################################################################
  // KEYBINDINGS:
  //   [ACTION] + [TARGET]
  //
  // [ACTIONS]:
  //   FOCUS      (CTRL+ALT)
  //   MOVE TAB   (CTRL+ALT+WIN)
  //   MOVE GROUP (CTRL+ALT+SHIFT+WIN)
  //
  // [TARGETS]:
  //   GROUPS (ARROWS)
  //   TABS   (PAGEUP,PAGEDOWN)
  //
  //### FOCUS ###
  //GROUPS
  //...
  //TABS
  //...
  //### MOVE TAB ###
  //GROUPS (Move tab to group)
  {
    "key": "ctrl+alt+win+left",
    "command": "workbench.action.moveEditorToLeftGroup",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+win+right",
    "command": "workbench.action.moveEditorToRightGroup",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+win+up",
    "command": "workbench.action.moveEditorToAboveGroup",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+win+down",
    "command": "workbench.action.moveEditorToBelowGroup",
    "when": "editorFocus"
  },
  //TABS (Move tab into group)
  {
    "key": "ctrl+alt+win+pageup",
    "command": "workbench.action.moveEditorLeftInGroup",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+win+pagedown",
    "command": "workbench.action.moveEditorRightInGroup",
    "when": "editorFocus"
  },
  //### MOVE GROUP ###
  //GROUPS  (Move group to group)
  {
    "key": "ctrl+shift+alt+win+left",
    "command": "workbench.action.moveActiveEditorGroupLeft",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+alt+win+right",
    "command": "workbench.action.moveActiveEditorGroupRight",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+alt+win+up",
    "command": "workbench.action.moveActiveEditorGroupUp",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+alt+win+down",
    "command": "workbench.action.moveActiveEditorGroupDown",
    "when": "editorFocus"
  },
  //##########################################################################
  //### EDITOR ###
  //##########################################################################
  //SELECTION - CHANGE CASE
  {
    "key": "ctrl+shift+u",
    "command": "editor.action.transformToUppercase",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+u",
    "command": "editor.action.transformToLowercase",
    "when": "editorTextFocus && !editorReadonly"
  },
  //WORD - DELETE
  {
    "key": "ctrl+backspace",
    "command": "deleteWordLeft",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+delete",
    "command": "deleteWordRight",
    "when": "editorTextFocus && !editorReadonly"
  },
  //LINE - DELETE
  {
    "key": "ctrl+shift+delete",
    "command": "editor.action.deleteLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  //LINE - DUPLICATE
  {
    "key": "ctrl+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  //LINE - MOVE
  {
    "key": "ctrl+shift+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  //LINE - INSERT
  {
    "key": "ctrl+shift+enter",
    "command": "editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly && !findWidgetVisible"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly && !findWidgetVisible"
  },
  //LINE - COMMENT
  {
    "key": "ctrl+oem_2",
    "command": "editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+oem_2",
    "command": "editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+abnt_c1",
    "command": "editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+abnt_c1",
    "command": "editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  //MULTILINE
  {
    "key": "alt+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  //REPLACE
  {
    "key": "ctrl+r",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  //MARKDOWN
  {
    "key": "ctrl+p",
    "command": "markdown-preview-enhanced.openPreviewToTheSide",
    "when": "editorLangId == 'markdown'"
  },
  //FILES
  {
    "key": "ctrl+e",
    "command": "workbench.files.action.showActiveFileInExplorer",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+e",
    "command": "revealFileInOS",
    "when": "editorFocus"
  },
  //##########################################################################
  //### EDITOR - FOLDING ###
  //##########################################################################
  //FOLDING
  {
    "key": "ctrl+oem_comma",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+oem_period",
    "command": "editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+oem_comma",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  //FOLDING - LEVEL
  {
    "key": "ctrl+1",
    "command": "editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+2",
    "command": "editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+3",
    "command": "editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+4",
    "command": "editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+5",
    "command": "editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+6",
    "command": "editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+7",
    "command": "editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
  },
  //FOLDING - SPECIAL
  {
    "key": "ctrl+8",
    "command": "editor.foldAllBlockComments",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+9",
    "command": "editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  //FOLDING - ALL
  {
    "key": "ctrl+0",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+0",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  //##########################################################################
  //### EDITOR - CODE COMPLETION ###
  //##########################################################################
  //SUGGEST - INLINE
  //{
  //    "key": "ctrl+left",
  //    "command": "editor.action.inlineSuggest.showPrevious",
  //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
  //},
  //{
  //    "key": "ctrl+up",
  //    "command": "editor.action.inlineSuggest.showPrevious",
  //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
  //},
  //{
  //    "key": "ctrl+down",
  //    "command": "editor.action.inlineSuggest.showNext",
  //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
  //},
  //{
  //    "key": "ctrl+right",
  //    "command": "editor.action.inlineSuggest.showNext",
  //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
  //},
  //{
  //    "key": "enter",
  //    "command": "editor.action.inlineSuggest.commit",
  //    "when": "editorTextFocus && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
  //},
  //{
  //    "key": "escape",
  //    "command": "editor.action.inlineSuggest.hide",
  //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
  //},
  //{
  //    "key": "ctrl+space",
  //    "command": "editor.action.inlineSuggest.hide",
  //    "when": "editorTextFocus && inlineSuggestionVisible && !editorReadonly"
  //},
  //{
  //    "key": "ctrl+space",
  //    "command": "runCommands",
  //    "args": {
  //        "commands": [
  //            "hideSuggestWidget",
  //            "editor.action.inlineSuggest.trigger"
  //        ]
  //    },
  //    "when": "editorTextFocus && !inlineSuggestionVisible && !editorReadonly"
  //},
  //### SUGGEST - WIDGET (CTRL+SPACE) ###
  {
    "key": "ctrl+space",
    "command": "hideSuggestWidget",
    "when": "editorTextFocus && suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorTextFocus && !suggestWidgetVisible"
  },
  //{
  //    "key": "ctrl+space",
  //    "command": "runCommands",
  //    "args": {
  //        "commands": [
  //            "editor.action.inlineSuggest.hide",
  //            "editor.action.triggerSuggest"
  //        ]
  //    },
  //    "when": "editorTextFocus && !suggestWidgetVisible && !editorReadonly"
  //},
  //### QUICK FIX (CTRL+SHIFT+SPACE) ###
  {
    "key": "ctrl+shift+space",
    "command": "editor.action.quickFix",
    "when": "editorTextFocus"
  },
  //### PARAMETERS ###
  {
    "key": "f1",
    "command": "closeParameterHints",
    "when": "editorTextFocus && parameterHintsVisible"
  },
  {
    "key": "f1",
    "command": "editor.action.triggerParameterHints",
    "when": "editorTextFocus && !parameterHintsVisible"
  },
  //HOVER
  {
    "key": "alt+f1",
    "command": "editor.action.escapeFocusHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "alt+f1",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  //##########################################################################
  //### SEARCH AND REPLACE ###
  //##########################################################################
  //SEARCH - IN FILES
  {
    "key": "ctrl+shift+f",
    "command": "workbench.action.findInFiles",
    "when": "editorFocus || filesExplorerFocus"
  },
  //REPLACE - IN FILES
  {
    "key": "ctrl+shift+r",
    "command": "workbench.action.replaceInFiles",
    "when": "editorFocus || filesExplorerFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "search.action.replace",
    "when": "searchViewletFocus && replaceActive"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "search.action.replaceAll",
    "when": "searchViewletFocus && replaceActive"
  },
  //##########################################################################
  //### EDITOR DIFF ###
  //##########################################################################
  {
    "key": "ctrl+f3",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "ctrl+shift+f3",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "alt+f3",
    "command": "editor.action.dirtydiff.next"
  },
  {
    "key": "alt+shift+f3",
    "command": "editor.action.dirtydiff.previous"
  },
  //##########################################################################
  //### SOURCE CONTROL MANAGER (GIT) ###
  //##########################################################################
  //STAGE FILE
  {
    "key": "ctrl+alt+k",
    "command": "runCommands",
    "args": {
      "commands": [
        "git.stage",
        "git.openChange",
        "workbench.scm.focus",
        "list.focusFirst",
        "list.select"
      ]
    },
    "when": "editorTextFocus && workbench.scm.active"
  },
  //STAGE ALL
  {
    "key": "ctrl+shift+alt+k",
    "command": "runCommands",
    "args": {
      "commands": [
        "git.stageAll",
        "git.openChange",
        "workbench.scm.focus",
        "list.focusFirst",
        "list.select"
      ]
    },
    "when": "editorTextFocus && workbench.scm.active"
  },
  //CHANGES
  {
    "key": "ctrl+shift+alt+F3",
    "command": "git.openChange",
    "when": "editorTextFocus"
  },
  //COMMIT STAGED
  {
    "key": "ctrl+enter",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.explorer.fileView.focus",
        "workbench.action.focusActiveEditorGroup",
        "git.commitStaged",
        "git.push"
      ]
    },
    "when": "focusedView == 'workbench.scm' && inputFocus"
  },
  //COMMIT ALL CHANGES
  {
    "key": "ctrl+shift+enter",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.explorer.fileView.focus",
        "workbench.action.focusActiveEditorGroup",
        "git.stageAll",
        "git.commitStaged",
        "git.push"
      ]
    },
    "when": "focusedView == 'workbench.scm' && inputFocus"
  },
  //PUSH
  {
    "key": "ctrl+alt+p",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.scm.focus",
        "git.push",
        "workbench.explorer.fileView.focus",
        "workbench.action.focusActiveEditorGroup"
      ]
    }
  },
  //PULL
  {
    "key": "ctrl+shift+alt+p",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.scm.focus",
        "git.pull",
        "workbench.explorer.fileView.focus",
        "workbench.action.focusActiveEditorGroup"
      ]
    }
  },
  //FETCH
  {
    "key": "ctrl+shift+alt+f",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.scm.focus",
        "git.fetch",
        "workbench.explorer.fileView.focus",
        "workbench.action.focusActiveEditorGroup"
      ]
    }
  },
  //REVERT
  {
    "key": "alt+z",
    "command": "git.clean"
  },
  //##########################################################################
  //### COMPARE EDITOR ###
  //##########################################################################
  {
    "key": "f3",
    "command": "editor.action.diffReview.next",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+f3",
    "command": "editor.action.diffReview.prev",
    "when": "isInDiffEditor"
  },
  {
    "key": "f3",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+f3",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  //##########################################################################
  //### KEYBINDINGS CLEAR ###
  //##########################################################################
  {
    "key": "ctrl+k v",
    "command": "-markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown.showPreview",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "key": "shift+tab",
    "command": "-workbench.action.terminal.enterAccessibilityMode",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+oem_4",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+insert",
    "command": "-editor.action.clipboardPasteAction"
  },
  {
    "key": "ctrl+shift+pagedown",
    "command": "-workbench.action.moveEditorRightInGroup"
  },
  {
    "key": "ctrl+shift+pageup",
    "command": "-workbench.action.moveEditorLeftInGroup"
  },
  {
    "key": "shift+alt+9",
    "command": "-workbench.action.moveEditorToLastGroup"
  },
  {
    "key": "shift+alt+1",
    "command": "-workbench.action.moveEditorToFirstGroup"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "alt+down",
    "command": "-showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "down",
    "command": "-showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+up",
    "command": "-showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "up",
    "command": "-showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "shift+escape",
    "command": "-removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "shift+escape",
    "command": "-closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "shift+escape",
    "command": "-cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "ctrl+shift+alt+down",
    "command": "-cursorColumnSelectDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+alt+left",
    "command": "-cursorColumnSelectLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+alt+pagedown",
    "command": "-cursorColumnSelectPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+alt+pageup",
    "command": "-cursorColumnSelectPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+alt+right",
    "command": "-cursorColumnSelectRight",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+alt+up",
    "command": "-cursorColumnSelectUp",
    "when": "textInputFocus"
  },
  {
    "key": "shift+pagedown",
    "command": "-cursorPageDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+pageup",
    "command": "-cursorPageUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+backspace",
    "command": "-deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "shift+pagedown",
    "command": "-cursorColumnSelectPageDown",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "shift+pageup",
    "command": "-cursorColumnSelectPageUp",
    "when": "editorColumnSelection && textInputFocus"
  },
  {
    "key": "ctrl+y",
    "command": "-redo"
  },
  {
    "key": "ctrl+shift+u",
    "command": "-workbench.action.output.toggleOutput",
    "when": "workbench.panel.output.active"
  },
  {
    "key": "ctrl+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-workbench.action.terminal.selectToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+down",
    "command": "-cursorDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+down",
    "command": "-editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+up",
    "command": "-cursorUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+up",
    "command": "-workbench.action.terminal.selectToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+up",
    "command": "-editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+oem_2",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-editor.action.addCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+oem_2",
    "command": "-editor.foldAllBlockComments",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+u",
    "command": "-editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+shift+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "shift+escape",
    "command": "-closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "ctrl+i",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "escape",
    "command": "-editor.action.inlineSuggest.hide",
    "when": "inlineSuggestionVisible"
  },
  {
    "key": "ctrl+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+i",
    "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openFolder",
    "when": "openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "ctrl+k ctrl+o",
    "command": "-workbench.action.files.openLocalFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+k o",
    "command": "-workbench.action.files.showOpenedFileInNewWindow",
    "when": "emptyWorkspaceSupport"
  },
  {
    "key": "ctrl+alt+win+n",
    "command": "-welcome.showNewFileEntries"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "f5",
    "command": "-debug.openView",
    "when": "!debuggersAvailable"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+k r",
    "command": "-workbench.action.files.revealActiveFileInWindows"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-editor.action.refactor",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+r",
    "command": "-rerunSearchEditorSearch",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+shift+h",
    "command": "-workbench.action.replaceInFiles"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+h",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+shift+oem_comma",
    "command": "-editor.action.inPlaceReplace.up",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+oem_period",
    "command": "-editor.action.inPlaceReplace.down",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+1",
    "command": "-editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-list.toggleSelection",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-notebook.cell.insertCodeCellAbove",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-editor.action.replaceOne",
    "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-editor.action.replaceAll",
    "when": "editorFocus && findWidgetVisible"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+1",
    "command": "-search.action.replaceAllInFile",
    "when": "fileMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+1",
    "command": "-search.action.replaceAllInFolder",
    "when": "folderMatchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+shift+1",
    "command": "-search.action.replace",
    "when": "matchFocus && replaceActive && searchViewletVisible"
  },
  {
    "key": "ctrl+alt+enter",
    "command": "-search.action.replaceAll",
    "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+delete",
    "command": "-editor.action.clipboardCutAction"
  },
  {
    "key": "ctrl+insert",
    "command": "-editor.action.clipboardCopyAction"
  },
  {
    "key": "ctrl+delete",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+space",
    "command": "-focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !config.editor.suggest.selectQuickSuggestions && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+space",
    "command": "-toggleSuggestionDetails",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+space",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "key": "ctrl+space",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "config.terminal.integrated.shellIntegration.suggestEnabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "key": "ctrl+space",
    "command": "-focusSuggestion",
    "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+backspace",
    "command": "-deleteWordLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+delete",
    "command": "-deleteWordRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+s",
    "command": "-workbench.action.openGlobalKeybindings"
  },
  {
    "key": "ctrl+oem_comma",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "alt+f1",
    "command": "-editor.action.showAccessibilityHelp"
  },
  {
    "key": "alt+f1",
    "command": "-workbench.action.terminal.showAccessibilityHelp",
    "when": "terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openFile",
    "when": "true"
  },
  {
    "key": "alt+oem_6",
    "command": "-editor.action.inlineSuggest.showNext",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "alt+oem_4",
    "command": "-editor.action.inlineSuggest.showPrevious",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "ctrl+left",
    "command": "-editor.action.inlineSuggest.undo",
    "when": "canUndoInlineSuggestion && !editorReadonly"
  },
  {
    "key": "ctrl+right",
    "command": "-editor.action.inlineSuggest.acceptNextWord",
    "when": "inlineSuggestionVisible && !editorReadonly"
  },
  {
    "key": "ctrl+shift+oem_period",
    "command": "-breadcrumbs.toggleToOn",
    "when": "!config.breadcrumbs.enabled"
  },
  {
    "key": "ctrl+shift+oem_period",
    "command": "-breadcrumbs.focusAndSelect",
    "when": "breadcrumbsPossible && breadcrumbsVisible"
  },
  {
    "key": "ctrl+oem_period",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+oem_comma",
    "command": "-editor.createFoldingRangeFromSelection",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+oem_period",
    "command": "-acceptSelectedCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+k u",
    "command": "-workbench.action.closeUnmodifiedEditors"
  },
  {
    "key": "ctrl+shift+t",
    "command": "-workbench.action.reopenClosedEditor"
  },
  {
    "key": "ctrl+k f",
    "command": "-workbench.action.closeFolder",
    "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
  },
  {
    "key": "ctrl+k ctrl+shift+w",
    "command": "-workbench.action.closeAllGroups"
  },
  {
    "key": "shift+escape",
    "command": "-workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+f4",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "shift+escape",
    "command": "-closeReferenceSearch",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "key": "shift+escape",
    "command": "-closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "shift+escape",
    "command": "-closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "shift+escape",
    "command": "-closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "shift+escape",
    "command": "-closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+escape",
    "command": "-closeAccessibilityHelp",
    "when": "accessibilityHelpWidgetVisible && editorFocus"
  },
  {
    "key": "ctrl+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  },
  {
    "key": "ctrl+k ctrl+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+shift+oem_4",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+3",
    "command": "-workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "ctrl+8",
    "command": "-workbench.action.focusEighthEditorGroup"
  },
  {
    "key": "ctrl+5",
    "command": "-workbench.action.focusFifthEditorGroup"
  },
  {
    "key": "ctrl+4",
    "command": "-workbench.action.focusFourthEditorGroup"
  },
  {
    "key": "ctrl+7",
    "command": "-workbench.action.focusSeventhEditorGroup"
  },
  {
    "key": "ctrl+6",
    "command": "-workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "ctrl+k ctrl+1",
    "command": "-editor.foldLevel1",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+2",
    "command": "-editor.foldLevel2",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+3",
    "command": "-editor.foldLevel3",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+4",
    "command": "-editor.foldLevel4",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+5",
    "command": "-editor.foldLevel5",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+6",
    "command": "-editor.foldLevel6",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+7",
    "command": "-editor.foldLevel7",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+oem_4",
    "command": "-editor.foldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+k ctrl+oem_period",
    "command": "-editor.removeManualFoldingRanges",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "-editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+oem_6",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+9",
    "command": "-editor.unfoldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+oem_plus",
    "command": "-editor.unfoldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+oem_6",
    "command": "-editor.unfoldRecursively",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+8",
    "command": "-editor.foldAllMarkerRegions",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+oem_minus",
    "command": "-editor.foldAllExcept",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+9",
    "command": "-workbench.action.lastEditorInGroup"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "shift+escape",
    "command": "-workbench.action.hideComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "shift+escape",
    "command": "-leaveSnippet",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "key": "shift+escape",
    "command": "-hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+escape",
    "command": "-hideCodeActionWidget",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "shift+escape",
    "command": "-cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "shift+escape",
    "command": "-cancelLinkedEditingInput",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "key": "shift+escape",
    "command": "-workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "alt+z",
    "command": "-workbench.action.terminal.sizeToContentWidth",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
  },
  {
    "key": "ctrl+k down",
    "command": "-workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "ctrl+k left",
    "command": "-workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "ctrl+k right",
    "command": "-workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "ctrl+k up",
    "command": "-workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "ctrl+k ctrl+d",
    "command": "-editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+right",
    "command": "-workbench.action.moveEditorToNextGroup"
  },
  {
    "key": "ctrl+alt+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+oem_5",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "ctrl+k ctrl+oem_5",
    "command": "-workbench.action.splitEditorDown"
  },
  {
    "key": "ctrl+k ctrl+shift+oem_5",
    "command": "-workbench.action.splitEditorInGroup",
    "when": "activeEditorCanSplitInGroup"
  },
  {
    "key": "ctrl+k ctrl+oem_5",
    "command": "-workbench.action.splitEditorLeft"
  },
  {
    "key": "ctrl+k ctrl+oem_5",
    "command": "-workbench.action.splitEditorOrthogonal"
  },
  {
    "key": "ctrl+k ctrl+oem_5",
    "command": "-workbench.action.splitEditorRight"
  },
  {
    "key": "ctrl+k ctrl+oem_5",
    "command": "-workbench.action.splitEditorUp"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+o",
    "command": "-workbench.action.files.openLocalFile",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "ctrl+shift+z",
    "command": "-redo"
  },
  {
    "key": "ctrl+enter",
    "command": "-workbench.action.submitComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "ctrl+enter",
    "command": "-scm.acceptInput",
    "when": "scmRepository"
  },
  {
    "key": "f7",
    "command": "-editor.action.diffReview.next",
    "when": "isInDiffEditor"
  },
  {
    "key": "shift+f7",
    "command": "-editor.action.diffReview.prev",
    "when": "isInDiffEditor"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "ctrl+alt+c",
    "command": "-mysql.db.active",
    "when": "editorLangId == 'sql'"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+f3",
    "command": "-editor.action.dirtydiff.previous",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "alt+f3",
    "command": "-editor.action.dirtydiff.next",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+r",
    "command": "-revealFileInOS",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+k v",
    "command": "-markdown-preview-enhanced.openPreviewToTheSide",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-markdown-preview-enhanced.runAllCodeChunks",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "shift+enter",
    "command": "-markdown-preview-enhanced.runCodeChunk",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-markdown-preview-enhanced.syncPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-markdown-preview-enhanced.openPreview",
    "when": "editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+f3",
    "command": "-editor.action.nextSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+shift+f3",
    "command": "-editor.action.previousSelectionMatchFindAction",
    "when": "editorFocus"
  }
]